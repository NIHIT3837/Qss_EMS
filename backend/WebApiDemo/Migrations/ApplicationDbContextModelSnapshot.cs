// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApiDemo.Data;

#nullable disable

namespace WebAppiDemo.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApiDemo.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DateOfJoining")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manager")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfJoining = "2023-01-01",
                            FirstName = "John",
                            LastName = "Doe",
                            Manager = "Jane Smith",
                            Role = "Developer"
                        },
                        new
                        {
                            Id = 2,
                            DateOfJoining = "2020-03-15",
                            FirstName = "Jane",
                            LastName = "Smith",
                            Manager = "N/A",
                            Role = "Manager"
                        },
                        new
                        {
                            Id = 3,
                            DateOfJoining = "2022-07-10",
                            FirstName = "Alice",
                            LastName = "Johnson",
                            Manager = "Jane Smith",
                            Role = "Developer"
                        });
                });

            modelBuilder.Entity("WebApiDemo.Models.Shirt", b =>
                {
                    b.Property<int>("ShirtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShirtId"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.HasKey("ShirtId");

                    b.ToTable("Shirts");

                    b.HasData(
                        new
                        {
                            ShirtId = 1,
                            Brand = "Brand1",
                            Color = "Red",
                            Gender = "Male",
                            Price = 200.0,
                            Size = 8
                        },
                        new
                        {
                            ShirtId = 2,
                            Brand = "Brand2",
                            Color = "Blue",
                            Gender = "Female",
                            Price = 300.0,
                            Size = 10
                        },
                        new
                        {
                            ShirtId = 3,
                            Brand = "Brand3",
                            Color = "Green",
                            Gender = "Unisex",
                            Price = 1000.0,
                            Size = 12
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
